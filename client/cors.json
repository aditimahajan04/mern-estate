2022-09-07 23:15:18> Program: Starting Squirrel Updater: --install .
2022-09-07 23:15:18> Program: Starting install, writing to C:\Users\aditi\AppData\Local\SquirrelTemp
2022-09-07 23:15:18> Program: About to install to: C:\Users\aditi\AppData\Local\WhatsApp
2022-09-07 23:15:18> CheckForUpdateImpl: Couldn't write out staging user ID, this user probably shouldn't get beta anything: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\Users\aditi\AppData\Local\WhatsApp\packages\.betaId'.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost)
   at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost)
   at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost)
   at System.IO.File.WriteAllText(String path, String contents, Encoding encoding)
   at Squirrel.UpdateManager.CheckForUpdateImpl.getOrCreateStagedUserId()
2022-09-07 23:15:18> CheckForUpdateImpl: Failed to load local releases, starting from scratch: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\Users\aditi\AppData\Local\WhatsApp\packages\RELEASES'.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)
   at Squirrel.Utility.LoadLocalReleases(String localReleaseFile)
   at Squirrel.UpdateManager.CheckForUpdateImpl.<CheckForUpdate>d__2.MoveNext()
2022-09-07 23:15:18> CheckForUpdateImpl: Reading RELEASES file from C:\Users\aditi\AppData\Local\SquirrelTemp
2022-09-07 23:15:18> CheckForUpdateImpl: First run or local directory is corrupt, starting from scratch
2022-09-07 23:15:18> ApplyReleasesImpl: Writing files to app directory: C:\Users\aditi\AppData\Local\WhatsApp\app-2.2218.8
2022-09-07 23:15:22> LogHost: Rigging execution stub for WhatsApp_ExecutionStub.exe to C:\Users\aditi\AppData\Local\WhatsApp\WhatsApp.exe
2022-09-07 23:15:23> ApplyReleasesImpl: Squirrel Enabled Apps: [C:\Users\aditi\AppData\Local\WhatsApp\app-2.2218.8\WhatsApp.exe]
2022-09-07 23:15:24> ApplyReleasesImpl: Starting fixPinnedExecutables
2022-09-07 23:15:24> ApplyReleasesImpl: Examining Pin: File Explorer.lnk
2022-09-07 23:15:24> ApplyReleasesImpl: Examining Pin: McAfee LiveSafe.lnk
2022-09-07 23:15:24> ApplyReleasesImpl: Examining Pin: Microsoft Edge.lnk
2022-09-07 23:15:24> ApplyReleasesImpl: Fixing up tray icons
2022-09-07 23:15:24> ApplyReleasesImpl: cleanDeadVersions: for version 2.2218.8
2022-09-07 23:15:24> ApplyReleasesImpl: cleanDeadVersions: exclude folder app-2.2218.8
2022-09-07 23:15:24> InstallHelperImpl: Couldn't write uninstall icon, don't care: System.Net.WebException: The remote name could not be resolved: 'web.whatsapp.com'
   at System.Net.HttpWebRequest.EndGetResponse(IAsyncResult asyncResult)
   at System.Net.WebClient.GetWebResponse(WebRequest request, IAsyncResult result)
   at System.Net.WebClient.DownloadBitsResponseCallback(IAsyncResult result)
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at Squirrel.UpdateManager.InstallHelperImpl.<CreateUninstallerRegistryEntry>d__5.MoveNext()
2024-09-18 23:05:19> Program: Starting Squirrel Updater: --install .
2024-09-18 23:05:19> Program: Starting install, writing to C:\Users\aditi\AppData\Local\SquirrelTemp
2024-09-18 23:05:19> Program: About to install to: C:\Users\aditi\AppData\Local\insomnia
2024-09-18 23:05:19> CheckForUpdateImpl: Couldn't write out staging user ID, this user probably shouldn't get beta anything: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\Users\aditi\AppData\Local\insomnia\packages\.betaId'.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost)
   at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost)
   at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost)
   at System.IO.File.WriteAllText(String path, String contents, Encoding encoding)
   at Squirrel.UpdateManager.CheckForUpdateImpl.getOrCreateStagedUserId()
2024-09-18 23:05:19> CheckForUpdateImpl: Failed to load local releases, starting from scratch: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\Users\aditi\AppData\Local\insomnia\packages\RELEASES'.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)
   at Squirrel.Utility.LoadLocalReleases(String localReleaseFile)
   at Squirrel.UpdateManager.CheckForUpdateImpl.<CheckForUpdate>d__2.MoveNext()
2024-09-18 23:05:19> CheckForUpdateImpl: Reading RELEASES file from C:\Users\aditi\AppData\Local\SquirrelTemp
2024-09-18 23:05:19> CheckForUpdateImpl: First run or local directory is corrupt, starting from scratch
2024-09-18 23:05:21> ApplyReleasesImpl: Writing files to app directory: C:\Users\aditi\AppData\Local\insomnia\app-10.0.0
2024-09-18 23:05:25> LogHost: Rigging execution stub for Insomnia_ExecutionStub.exe to C:\Users\aditi\AppData\Local\insomnia\Insomnia.exe
2024-09-18 23:05:28> ApplyReleasesImpl: Squirrel Enabled Apps: [C:\Users\aditi\AppData\Local\insomnia\app-10.0.0\Insomnia.exe]
2024-09-18 23:05:30> ApplyReleasesImpl: Starting fixPinnedExecutables
2024-09-18 23:05:30> ApplyReleasesImpl: Examining Pin: Aditi - Chrome.lnk
2024-09-18 23:05:30> ApplyReleasesImpl: Examining Pin: McAfee.lnk
2024-09-18 23:05:30> ApplyReleasesImpl: Examining Pin: Microsoft Edge.lnk
2024-09-18 23:05:30> ApplyReleasesImpl: Examining Pin: Visual Studio Code.lnk
2024-09-18 23:05:30> ApplyReleasesImpl: Fixing up tray icons
2024-09-18 23:05:30> ApplyReleasesImpl: cleanDeadVersions: for version 10.0.0
2024-09-18 23:05:30> ApplyReleasesImpl: cleanDeadVersions: exclude folder app-10.0.0
irrel.Utility.<>c__DisplayClass12_1`1.<ForEachAsync>b__1()
   at System.Threading.Tasks.Task.InnerInvoke()
   at System.Threading.Tasks.Task.Execute()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<>c__DisplayClass13_1`1.<<ForEachAsync>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<DeleteDirectory>d__19.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<>c.<<DeleteDirectory>b__19_1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<>c__DisplayClass13_1`1.<<ForEachAsync>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<DeleteDirectory>d__19.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<LogIfThrows>d__42.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at Squirrel.Update.Program.<Install>d__4.MoveNext()
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)
   at System.Threading.Tasks.Task.Wait()
   at Squirrel.Update.Program.executeCommandLine(String[] args)
   at Squirrel.Update.Program.main(String[] args)
---> (Inner Exception #0) System.IO.IOException: The process cannot access the file 'C:\Users\aditi\AppData\Local\insomnia\app-10.0.0\Insomnia.exe' because it is being used by another process.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.File.InternalDelete(String path, Boolean checkHost)
   at System.IO.File.Delete(String path)
   at Squirrel.Utility.<>c.<DeleteDirectory>b__19_0(String file)
   at Squirrel.Utility.<>c__DisplayClass12_1`1.<ForEachAsync>b__1()
   at System.Threading.Tasks.Task.InnerInvoke()
   at System.Threading.Tasks.Task.Execute()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<>c__DisplayClass13_1`1.<<ForEachAsync>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<DeleteDirectory>d__19.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<>c.<<DeleteDirectory>b__19_1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<>c__DisplayClass13_1`1.<<ForEachAsync>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<DeleteDirectory>d__19.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<LogIfThrows>d__42.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at Squirrel.Update.Program.<Install>d__4.MoveNext()<---

2024-09-18 23:08:55> Program: Starting Squirrel Updater: --install .
2024-09-18 23:08:55> Program: Starting install, writing to C:\Users\aditi\AppData\Local\SquirrelTemp
2024-09-18 23:08:55> Program: About to install to: C:\Users\aditi\AppData\Local\insomnia
2024-09-18 23:08:55> Program: Install path C:\Users\aditi\AppData\Local\insomnia already exists, burning it to the ground
2024-09-18 23:08:55> IEnableLogger: : System.ComponentModel.Win32Exception (0x80004005): Access is denied
   at System.Diagnostics.Process.Kill()
   at Squirrel.UpdateManager.InstallHelperImpl.<>c__DisplayClass6_1.<KillAllProcessesBelongingToPackage>b__2()
   at Squirrel.Utility.LogIfThrows(IFullLogger This, LogLevel level, String message, Action block)
2024-09-18 23:08:55> IEnableLogger: : System.ComponentModel.Win32Exception (0x80004005): Access is denied
   at System.Diagnostics.Process.Kill()
   at Squirrel.UpdateManager.InstallHelperImpl.<>c__DisplayClass6_1.<KillAllProcessesBelongingToPackage>b__2()
   at Squirrel.Utility.LogIfThrows(IFullLogger This, LogLevel level, String message, Action block)
2024-09-18 23:08:56> CheckForUpdateImpl: Couldn't write out staging user ID, this user probably shouldn't get beta anything: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\Users\aditi\AppData\Local\insomnia\packages\.betaId'.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost)
   at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost)
   at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost)
   at System.IO.File.WriteAllText(String path, String contents, Encoding encoding)
   at Squirrel.UpdateManager.CheckForUpdateImpl.getOrCreateStagedUserId()
2024-09-18 23:08:56> CheckForUpdateImpl: Failed to load local releases, starting from scratch: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\Users\aditi\AppData\Local\insomnia\packages\RELEASES'.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)
   at Squirrel.Utility.LoadLocalReleases(String localReleaseFile)
   at Squirrel.UpdateManager.CheckForUpdateImpl.<CheckForUpdate>d__2.MoveNext()
2024-09-18 23:08:56> CheckForUpdateImpl: Reading RELEASES file from C:\Users\aditi\AppData\Local\SquirrelTemp
2024-09-18 23:08:56> CheckForUpdateImpl: First run or local directory is corrupt, starting from scratch
2024-09-18 23:08:57> ApplyReleasesImpl: Writing files to app directory: C:\Users\aditi\AppData\Local\insomnia\app-10.0.0
2024-09-18 23:09:02> LogHost: Rigging execution stub for Insomnia_ExecutionStub.exe to C:\Users\aditi\AppData\Local\insomnia\Insomnia.exe
2024-09-18 23:09:09> ApplyReleasesImpl: Squirrel Enabled Apps: [C:\Users\aditi\AppData\Local\insomnia\app-10.0.0\Insomnia.exe]
2024-09-18 23:09:11> ApplyReleasesImpl: Starting fixPinnedExecutables
2024-09-18 23:09:11> ApplyReleasesImpl: Examining Pin: Aditi - Chrome.lnk
2024-09-18 23:09:11> ApplyReleasesImpl: Examining Pin: McAfee.lnk
2024-09-18 23:09:11> ApplyReleasesImpl: Examining Pin: Microsoft Edge.lnk
2024-09-18 23:09:11> ApplyReleasesImpl: Examining Pin: Visual Studio Code.lnk
2024-09-18 23:09:11> ApplyReleasesImpl: Fixing up tray icons
2024-09-18 23:09:11> ApplyReleasesImpl: cleanDeadVersions: for version 10.0.0
2024-09-18 23:09:11> ApplyReleasesImpl: cleanDeadVersions: exclude folder app-10.0.0
End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<>c.<<DeleteDirectory>b__19_1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<>c__DisplayClass13_1`1.<<ForEachAsync>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<DeleteDirectory>d__19.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<LogIfThrows>d__42.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at Squirrel.Update.Program.<Install>d__4.MoveNext()
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)
   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)
   at System.Threading.Tasks.Task.Wait()
   at Squirrel.Update.Program.executeCommandLine(String[] args)
   at Squirrel.Update.Program.main(String[] args)
---> (Inner Exception #0) System.IO.IOException: The process cannot access the file 'C:\Users\aditi\AppData\Local\insomnia\packages\insomnia-10.0.0-full.nupkg' because it is being used by another process.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.File.InternalDelete(String path, Boolean checkHost)
   at System.IO.File.Delete(String path)
   at Squirrel.Utility.<>c.<DeleteDirectory>b__19_0(String file)
   at Squirrel.Utility.<>c__DisplayClass12_1`1.<ForEachAsync>b__1()
   at System.Threading.Tasks.Task.InnerInvoke()
   at System.Threading.Tasks.Task.Execute()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<>c__DisplayClass13_1`1.<<ForEachAsync>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<DeleteDirectory>d__19.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<>c.<<DeleteDirectory>b__19_1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<>c__DisplayClass13_1`1.<<ForEachAsync>b__1>d.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<DeleteDirectory>d__19.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Squirrel.Utility.<LogIfThrows>d__42.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at Squirrel.Update.Program.<Install>d__4.MoveNext()<---

2024-09-18 23:11:00> Program: Starting Squirrel Updater: --install .
2024-09-18 23:11:00> Program: Starting install, writing to C:\Users\aditi\AppData\Local\SquirrelTemp
2024-09-18 23:11:00> Program: About to install to: C:\Users\aditi\AppData\Local\insomnia
2024-09-18 23:11:00> Program: Install path C:\Users\aditi\AppData\Local\insomnia already exists, burning it to the ground
2024-09-18 23:11:00> CheckForUpdateImpl: Couldn't write out staging user ID, this user probably shouldn't get beta anything: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\Users\aditi\AppData\Local\insomnia\packages\.betaId'.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost)
   at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost)
   at System.IO.File.InternalWriteAllText(String path, String contents, Encoding encoding, Boolean checkHost)
   at System.IO.File.WriteAllText(String path, String contents, Encoding encoding)
   at Squirrel.UpdateManager.CheckForUpdateImpl.getOrCreateStagedUserId()
2024-09-18 23:11:00> CheckForUpdateImpl: Failed to load local releases, starting from scratch: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\Users\aditi\AppData\Local\insomnia\packages\RELEASES'.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)
   at Squirrel.Utility.LoadLocalReleases(String localReleaseFile)
   at Squirrel.UpdateManager.CheckForUpdateImpl.<CheckForUpdate>d__2.MoveNext()
2024-09-18 23:11:00> CheckForUpdateImpl: Reading RELEASES file from C:\Users\aditi\AppData\Local\SquirrelTemp
2024-09-18 23:11:00> CheckForUpdateImpl: First run or local directory is corrupt, starting from scratch
2024-09-18 23:11:01> ApplyReleasesImpl: Writing files to app directory: C:\Users\aditi\AppData\Local\insomnia\app-10.0.0
2024-09-18 23:11:06> LogHost: Rigging execution stub for Insomnia_ExecutionStub.exe to C:\Users\aditi\AppData\Local\insomnia\Insomnia.exe
2024-09-18 23:11:14> ApplyReleasesImpl: Squirrel Enabled Apps: [C:\Users\aditi\AppData\Local\insomnia\app-10.0.0\Insomnia.exe]
2024-09-18 23:11:15> ApplyReleasesImpl: Starting fixPinnedExecutables
2024-09-18 23:11:15> ApplyReleasesImpl: Examining Pin: Aditi - Chrome.lnk
2024-09-18 23:11:15> ApplyReleasesImpl: Examining Pin: McAfee.lnk
2024-09-18 23:11:15> ApplyReleasesImpl: Examining Pin: Microsoft Edge.lnk
2024-09-18 23:11:15> ApplyReleasesImpl: Examining Pin: Visual Studio Code.lnk
2024-09-18 23:11:15> ApplyReleasesImpl: Fixing up tray icons
2024-09-18 23:11:15> ApplyReleasesImpl: cleanDeadVersions: for version 10.0.0
2024-09-18 23:11:15> ApplyReleasesImpl: cleanDeadVersions: exclude folder app-10.0.0
[
  {
    "origin": ["*"],
    "method": ["GET", "POST", "PUT"],
    "maxAgeSeconds": 3600,
    "responseHeader": ["Content-Type"]
  }
]

